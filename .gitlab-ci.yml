stages:
  - aio

variables:
  REPOSITORY_NAME: mh-${CI_JOB_NAME}
  SERVICE_DIR: src/microservices

before_script:
  # Config AWS
  - aws configure set aws_access_key_id $CI_ACCESS_KEY_ID
  - aws configure set aws_secret_access_key $CI_SECRET_ACCESS_KEY
  - echo $CI_CONFIG_AUTH | base64 -d > ~/.aws/config
  - export AWS_PROFILE=$CI_RUNNER_PROFILE
  - export AWS_SDK_LOAD_CONFIG=1

.default_rules:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(develop|staging|uat)$/'
      changes:
        - ${SERVICE_DIR}/${SERVICE_NAME}/**/*
      when: on_success
    - if: '$CI_COMMIT_TAG =~ /^(\d\.){2}\d\.?\d?$/'
      when: manual

# Approve
.approve:
  script:
    - |
      if [[ -n ${CI_COMMIT_TAG} ]]; then
        if [[ ${GITLAB_USER_EMAIL} == "vuong@jobhopin.com" ]] || [[ ${GITLAB_USER_EMAIL} == "nga.trieu@jobhopin.com" ]]; then
          echo "INFO: User ${GITLAB_USER_NAME} is permitted to deploy on PROD"
        else
          echo "ERROR: User ${GITLAB_USER_NAME} is NOT permitted to deploy on PROD"
          exit 1
        fi
      else
        echo "INFO: NONPROD is auto-approved"
      fi

# Build
.build:
  script:
    - cd ${SERVICE_DIR}/${SERVICE_NAME}
    - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPOSITORY}
    - docker build -t ${ECR_REPOSITORY}/${REPOSITORY_NAME}:git-${CI_COMMIT_SHA} -t ${ECR_REPOSITORY}/${REPOSITORY_NAME}:${CI_COMMIT_BRANCH} .
    - docker push ${ECR_REPOSITORY}/${REPOSITORY_NAME}:git-${CI_COMMIT_SHA}
    - docker push ${ECR_REPOSITORY}/${REPOSITORY_NAME}:${CI_COMMIT_REF_NAME}

# Deploy
.deploy:
  script:
    - git clone https://jobhop-ci-token:${JOBHOP_CI_TOKEN}@gitlab.com/jobhopvn/devops/infrastructure/helm/api.git
    - aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER}
    - helm --namespace ${APP_NAMESPACE} upgrade --install ${CI_JOB_NAME} --set image.registry=${ECR_REPOSITORY} --set image.repository=${REPOSITORY_NAME} --set image.tag=git-${CI_COMMIT_SHA} -f deploy/${SERVICE_CONFIG_FILE} api/

metahop-gateway:
  stage: aio
  variables:
    SERVICE_DIR: src/gateways
    SERVICE_NAME: metahop
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

admin-gateway:
  stage: aio
  variables:
    SERVICE_DIR: src/gateways
    SERVICE_NAME: admin
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

public-gateway:
  stage: aio
  variables:
    SERVICE_DIR: src/gateways
    SERVICE_NAME: public
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

activity-service:
  stage: aio
  variables:
    SERVICE_NAME: activity
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

quizz-service:
  stage: aio
  variables:
    SERVICE_NAME: quizz
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

course-service:
  stage: aio
  variables:
    SERVICE_NAME: course
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

shared-service:
  stage: aio
  variables:
    SERVICE_NAME: shared
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

user-service:
  stage: aio
  variables:
    SERVICE_NAME: user
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

bunny-service:
  stage: aio
  variables:
    SERVICE_NAME: bunny
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}

event-service:
  stage: aio
  variables:
    SERVICE_NAME: event
  script:
    - !reference [.approve, script]
    - !reference [.build, script]
    - !reference [.deploy, script]
  rules:
    - !reference [.default_rules, rules]
  environment:
    name: ${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}
